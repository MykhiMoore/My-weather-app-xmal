<Window x:Class="My_weather_app.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:My_weather_app"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btnstyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="btnstyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" Height="27" Margin="-3,0,0,0">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Image Source="/Images/illustrated_park.jpg" Stretch="UniformToFill" Panel.ZIndex="-1" Grid.ColumnSpan="7" Margin="0,48,0,-4" Grid.RowSpan="4" />
        <Image Source="/Images/fahrenheit.png" Margin="-6,15,8,15" Grid.Row="2" RenderTransformOrigin="0.216,0.862" />
        <Image Source="/Images/fahrenheit.png" Margin="108,15,9,16" Grid.Row="2" RenderTransformOrigin="0.216,0.862" Grid.ColumnSpan="2" />
        <Image Source="/Images/fahrenheit.png" Margin="108,14,8,16" Grid.Row="2" RenderTransformOrigin="0.216,0.862" Grid.Column="1" Grid.ColumnSpan="2" />
        <Image Source="/Images/fahrenheit.png" Margin="108,15,8,15" Grid.Row="2" RenderTransformOrigin="0.216,0.862" Grid.Column="5" Grid.ColumnSpan="2" />
        <Image Source="/Images/fahrenheit.png" Margin="108,15,8,15" Grid.Row="2" RenderTransformOrigin="0.216,0.862" Grid.Column="4" Grid.ColumnSpan="2" />
        <Image Source="/Images/fahrenheit.png" Margin="108,15,8,15" Grid.Row="2" RenderTransformOrigin="0.216,0.862" Grid.Column="3" Grid.ColumnSpan="2" />
        <Image Source="/Images/fahrenheit.png" Margin="108,14,8,16" Grid.Row="2" RenderTransformOrigin="0.216,0.862" Grid.Column="2" Grid.ColumnSpan="2" />
        <Image Source="/Images/cloudy.png" Grid.ColumnSpan="2" Margin="40,48,94,15" Grid.Row="1" Grid.RowSpan="2" />
        <Image Source="/Images/rain.png" Grid.Column="1" Grid.ColumnSpan="2" Margin="24,48,91,289" Grid.RowSpan="3" Grid.Row="1" />
        <Image Source="/Images/sunny.png" Grid.Column="6" Margin="24,44,-24,5" Grid.RowSpan="2" Grid.Row="1" />
        <Image Source="/Images/heavy_rain.png" Grid.Column="2" Margin="55,3,2,5" Grid.Row="2" />
        <Image Source="/Images/hail.png" Grid.Column="3" Grid.ColumnSpan="2" Margin="27,48,86,2" Grid.RowSpan="2" Grid.Row="1" />
        <Image Source="/Images/flooding.png" Grid.Column="5" Grid.ColumnSpan="2" Margin="41,5,94,2" Grid.Row="2" />
        <Image Source="/Images/partly_cloudy.png" Grid.Column="4" Grid.ColumnSpan="2" Margin="34,7,92,7" Grid.Row="2" />
        <TextBlock Text="My Weather App" FontSize="23" HorizontalAlignment="Left"  Grid.Row="0" VerticalAlignment="Top" Grid.Column="2" Margin="67,-2,0,0" Grid.ColumnSpan="3" FontWeight="Bold"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Sunday" VerticalAlignment="Center" Height="48" Width="98" FontSize="23" Margin="15,0,0,0"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Monday" VerticalAlignment="Center" Height="48" Width="114" FontSize="23" Grid.Column="1" Grid.ColumnSpan="2" Margin="15,0,0,0"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Tuesday" VerticalAlignment="Center" Height="48" Width="114" FontSize="23" Grid.Column="2" Grid.ColumnSpan="2" Margin="10,0,0,0"/>
        <TextBlock HorizontalAlignment="Center" Grid.Row="1" TextWrapping="Wrap" Text="Wednsday" VerticalAlignment="Center" Height="48" Width="114" FontSize="23" Grid.Column="3"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Thursday" VerticalAlignment="Center" Height="48" Width="114" FontSize="23" Grid.Column="4" Grid.ColumnSpan="2" Margin="10,0,0,0"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Friday" VerticalAlignment="Center" Height="48" Width="114" FontSize="23" RenderTransformOrigin="0.715,0.598" Grid.Column="5" Grid.ColumnSpan="2" Margin="27,0,0,0"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="1" TextWrapping="Wrap" Text="Saturday" VerticalAlignment="Center" Height="48" Width="114" FontSize="23" Grid.Column="6" Margin="10,0,0,0"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" Text="35" VerticalAlignment="Center" FontSize="26" Width="33" Height="39" Margin="10,0,0,0" RenderTransformOrigin="-0.076,0.538"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" Text="750" VerticalAlignment="Top" FontSize="26" Width="33" Height="39" Margin="10,3,0,0" RenderTransformOrigin="-0.076,0.538" Grid.Column="6"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" Text="45" VerticalAlignment="Center" FontSize="26" Width="33" Height="39" Margin="10,0,0,0" RenderTransformOrigin="-0.076,0.538" Grid.Column="5"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" Text="45" VerticalAlignment="Center" FontSize="26" Width="33" Height="39" Margin="10,0,0,0" RenderTransformOrigin="-0.076,0.538" Grid.Column="4"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" Text="45" VerticalAlignment="Center" FontSize="26" Width="33" Height="39" Margin="10,0,0,0" RenderTransformOrigin="-0.076,0.538" Grid.Column="3"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" Text="45" VerticalAlignment="Center" FontSize="26" Width="33" Height="39" Margin="10,0,0,0" RenderTransformOrigin="-0.076,0.538" Grid.Column="2"/>
        <TextBlock HorizontalAlignment="Left" Grid.Row="2" TextWrapping="Wrap" VerticalAlignment="Center" FontSize="26" Width="33" Height="39" Margin="10,0,0,0" RenderTransformOrigin="-0.076,0.538" Grid.Column="1"><Run Text="45"/><LineBreak/><Run/><LineBreak/><Run/></TextBlock>
        <TextBlock HorizontalAlignment="Left" Margin="10,21,0,0" Grid.Row="3" TextWrapping="Wrap" Text="A few showers early with overcast skies. later in the day. High 61F. Winds light and variable Chance of rain 30%" VerticalAlignment="Top" Height="157" Width="85" Background="White"/>
        <TextBlock HorizontalAlignment="Left" Margin="10,21,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Cloudy skies early, followed by partial clearing. Low 47. Winds light and variable." VerticalAlignment="Top" Height="123" Width="85" Grid.Column="1" Background="White" RenderTransformOrigin="0.503,0.523"/>
        <TextBlock HorizontalAlignment="Left" Margin="10,21,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Showers in the evening with some clearing overnight. Low 46F. Winds SSW at 5 to 10 mph. Chance of rain 50%" VerticalAlignment="Top" Height="152" Width="85" Grid.Column="2" Background="White" Foreground="Black" OpacityMask="Black"/>
        <TextBlock HorizontalAlignment="Left" Margin="10,21,0,0" Grid.Row="3" TextWrapping="Wrap" VerticalAlignment="Top" Height="173" Width="85" Grid.Column="3" Background="White"><Run Text="Mostly cloudy skies early. A few showers"/><LineBreak/><Run Text="developing later in the day. High 61F. Winds SSW at 5 to 10 mph. Chance of rain 30%"/></TextBlock>
        <TextBlock HorizontalAlignment="Left" Margin="10,21,0,0" Grid.Row="3" TextWrapping="Wrap" Text="A few showers early with mostly cloudy conditions later in the day. High 49F. Winds W a 5 to 10 mph, Chance of rain 30%" VerticalAlignment="Top" Height="173" Width="85" Grid.Column="5" Background="White"/>
        <TextBlock HorizontalAlignment="Center" Margin="0,21,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Cloudy skies with periods of rain after midnight. Low 53F. Winds ESE at 5 to 10 mph. Chance of rain 90%. Rainfall around a quarter of an inch " VerticalAlignment="Top" Height="186" Width="85" Grid.Column="4" Background="White"/>
        <TextBlock HorizontalAlignment="Left" Margin="7,21,0,0" Grid.Row="3" TextWrapping="Wrap" Text="Sunshine and clouds mixed, High around 65F. Winds E at 5 to 10 mph." VerticalAlignment="Top" Height="107" Width="85" Grid.Column="6" Background="White"/>

        <Button Style="{DynamicResource btnstyle2}" Content="Next 7 Days" HorizontalAlignment="Center" Margin="0,242,0,0" Grid.Row="3" VerticalAlignment="Top" Width="78" Grid.Column="6" BorderBrush="#FF0A51FF" Background="#FF0A51FF" Height="27"/>

        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="10,21,20,127" Grid.Column="1"/>
        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="8,21,22,145" Grid.Column="6"/>
        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="11,21,20,82" Grid.Column="5"/>
        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="15,20,14,71" Grid.Column="4"/>
        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="10,21,20,82" Grid.Column="3"/>
        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="10,21,19,95" Grid.Column="2"/>
        <Border BorderBrush="#FF0205F3" BorderThickness="1" Grid.Row="3" Margin="10,21,19,95"/>
        <Button Style="{DynamicResource btnstyle}" Content="Pre 7 days" HorizontalAlignment="Center" Margin="0,242,0,0" Grid.Row="3" VerticalAlignment="Top" Width="94" Click="Button_Click_1" BorderBrush="#FF0A51FF" Background="#FF0A51FF" Height="27"/>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="50*"/>
            <RowDefinition Height="300*"/>
        </Grid.RowDefinitions>
    </Grid>
</Window>
